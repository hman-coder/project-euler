package one_to_ten.p02;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
 * the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms
 *
 * Straightforward: Hold the last two values in some variables x, y(you could use an array). In each loop, calculate
 * the new term and add it if it's even, then move y's value to x, and set y's value to be the new term.
 */
public class Problem2 {
   public long runAlgorithm(long upperBound) {
       long firstNumber = 1;
       long secondNumber = 1;
       long newTerm;
       long returnedValue = 0;

       while (secondNumber < upperBound) {
           newTerm = firstNumber + secondNumber;
           if(newTerm % 2 == 0) returnedValue += newTerm;

           firstNumber = secondNumber;
           secondNumber = newTerm;
       }

       return returnedValue;
   }
}
